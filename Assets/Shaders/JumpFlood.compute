#pragma kernel Init
#pragma kernel JumpFloodStep

#include "UnityCG.cginc"

Texture2D<float> Silhouette;
Texture2D<float> Depth;

Texture2D<float4> Input;
RWTexture2D<float4> Output;
float OutlineWidth;
uint BufferWidth;
uint BufferHeight;
uint StepWidth;

#define JFA_NULL -1.0

[numthreads(8, 8, 1)]
void Init(uint3 id : SV_DispatchThreadID)
{
    float value = Silhouette[id.xy];
    if (value > 0.01)
        //Output[id.xy] = float4(id.xy, Depth[id.xy], value);
        Output[id.xy] = float4(id.xy, value, value);
    else
        Output[id.xy] = JFA_NULL;
}

[numthreads(8,8,1)]
void JumpFloodStep (uint3 id : SV_DispatchThreadID)
{
    float bestDist = 1.#INF;
    float4 data = Input[id.xy];

    [unroll]
    for (int u = -1; u <= 1; u++)
    {
        [unroll]
        for (int v = -1; v <= 1; v++)
        {
            int2 offsetID = clamp(id.xy + int2(u, v) * StepWidth, 0, int2(BufferWidth - 1, BufferHeight - 1));
            float4 potentialData = Input[offsetID];
            float2 disp = potentialData.xy - id.xy;
            float dist = dot(disp, disp);

            if (potentialData.x != JFA_NULL && dist < bestDist)
            {
                if (data.a <= -1 || (data.a < potentialData.z))
                {
                    bestDist = dist;
                    data.xyz = potentialData.xyz;
                }
            }
        }
    }

    if (data.a <= -1)
        Output[id.xy] = bestDist < 1.#INF ? data : JFA_NULL;
    else
        Output[id.xy] = data;
}
